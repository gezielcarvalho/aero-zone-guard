"""empty message

Revision ID: 5b571438073a
Revises: 
Create Date: 2024-03-08 21:30:59.921397

"""
import json
import os
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '5b571438073a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    users = op.create_table('users',
                            sa.Column('id', sa.Integer(), nullable=False),
                            sa.Column('username', sa.String(length=100), nullable=False),
                            sa.Column('email', sa.String(length=100), nullable=False),
                            sa.Column('role', sa.Enum('ADMIN', 'USER', 'DEVELOPER', 'STAFF', name='role'),
                                      nullable=True),
                            sa.Column('created_at', sa.DateTime(), nullable=False),
                            sa.Column('updated_at', sa.DateTime(), nullable=False),
                            sa.PrimaryKeyConstraint('id')
                            )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    with open(os.path.join(os.path.dirname(__file__), '../data/users.json')) as f:
        users_data = f.read()

    op.bulk_insert(users, json.loads(users_data))

    op.create_table('profiles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=100), nullable=False),
                    sa.Column('last_name', sa.String(length=100), nullable=False),
                    sa.Column('bio', sa.Text(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_profiles_id'), 'profiles', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_profiles_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
